/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'jakob' at '3/27/15 10:41 AM' with Gradle 2.3
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE'
    }
}
apply plugin: 'org.springframework.boot.spring-boot'

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}


project (":Beef") {
    // tag::xsd[]
    task genJaxb {
        ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
        ext.classesDir = "${buildDir}/classes/jaxb"
        ext.schema = "src/main/resources/countries.xsd"

        outputs.dir classesDir

        doLast() {
            project.ant {
                taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                        classpath: configurations.jaxb.asPath
                mkdir(dir: sourcesDir)
                mkdir(dir: classesDir)

                xjc(destdir: sourcesDir, schema: schema) {
                    arg(value: "-wsdl")
                    produces(dir: sourcesDir, includes: "**/*.java")
                }

                javac(destdir: classesDir, source: 1.6, target: 1.6, debug: true,
                        debugLevel: "lines,vars,source",
                        classpath: configurations.jaxb.asPath) {
                    src(path: sourcesDir)
                    include(name: "**/*.java")
                    include(name: "*.java")
                }

                copy(todir: classesDir) {
                    fileset(dir: sourcesDir, erroronmissingdir: false) {
                        exclude(name: "**/*.java")
                    }
                }
            }
        }
    }
    // end::xsd[]

    task afterEclipseImport {
        dependsOn "genJaxb"
    }

    // tag::jaxb[]
    configurations {
        jaxb
    }

    jar {
        baseName = 'gs-producing-web-service'
        version =  '0.1.0'
        from genJaxb.classesDir
    }

    // tag::dependencies[]
    dependencies {
        compile("org.springframework.boot:spring-boot-starter-ws")
        testCompile("org.springframework.boot:spring-boot-starter-test")
        compile("wsdl4j:wsdl4j:1.6.1")
        jaxb("com.sun.xml.bind:jaxb-xjc:2.2.4-1")
        compile(files(genJaxb.classesDir).builtBy(genJaxb))
        apply project(":")
    }
    // end::dependencies[]
    // end::jaxb[]

    task wrapper(type: Wrapper) {
        gradleVersion = '2.3'
    }
}
