package roast.beef;

import io.roast.GetItemRequest;
import io.roast.GetItemResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ws.server.endpoint.annotation.Endpoint;
import org.springframework.ws.server.endpoint.annotation.PayloadRoot;
import org.springframework.ws.server.endpoint.annotation.RequestPayload;
import org.springframework.ws.server.endpoint.annotation.ResponsePayload;

import javax.xml.datatype.DatatypeConfigurationException;

/**
 * The SOA endpoint, takes the HTTP requests and forwards them to the ItemRepository.
 *
 * @author Andreas Willinger
 * @version 1.0
 */
@Endpoint
public class ItemEndpoint
{
    private static final String NAMESPACE_URI = "http://roast.io";

    private ItemRepository itemRepository;

    @Autowired
    public ItemEndpoint(ItemRepository itemRepository)
    {
        this.itemRepository = itemRepository;
    }

    // "getItemRequest" correspondents to the same <xs:element.. in the item.xsd
    @PayloadRoot(namespace = NAMESPACE_URI, localPart = "getItemRequest")
    // speciality by Spring
    @ResponsePayload
    public GetItemResponse getItem(@RequestPayload GetItemRequest request)
    {
        // prepare the XML response (auto-generated by jaxb)
        GetItemResponse response = new GetItemResponse();
        // then send a request to the ItemRepository and save all results in that list
        response.getResponse().addAll(itemRepository.findItems(request.getQuery()));

        return response;
    }
}
